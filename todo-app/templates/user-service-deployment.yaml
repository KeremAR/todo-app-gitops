apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: user-service
    app.kubernetes.io/name: {{ include "todo-app.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: user-service
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.userService.replicaCount }}
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
        app.kubernetes.io/name: {{ include "todo-app.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: user-service
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      containers:
        - name: user-service
          image: "{{ .Values.userService.repository }}:{{ .Values.imageTag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.userService.port }}
          env:
            - name: SECRET_KEY
              value: "change-in-production" # Consider using secrets for this
        livenessProbe:
          httpGet:
            path: {{ .Values.userService.probes.liveness.httpGet.path }}
            port: {{ .Values.userService.probes.liveness.httpGet.port }}
          initialDelaySeconds: {{ .Values.userService.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.userService.probes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.userService.probes.liveness.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.userService.probes.readiness.httpGet.path }}
            port: {{ .Values.userService.probes.readiness.httpGet.port }}
          initialDelaySeconds: {{ .Values.userService.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.userService.probes.readiness.periodSeconds }}
        volumeMounts:
        - name: user-data
          mountPath: {{ .Values.userService.volumes.userData.mountPath }}
        {{- with .Values.global.resources | default .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
      - name: user-data
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
